#BlueJ class context
comment0.target=FitnessApp
comment0.text=\r\nClasse\ que\ tem\ acesso\ a\ todos\ os\ elementos\ das\ classes\ \r\n
comment1.params=
comment1.target=FitnessApp()
comment10.params=natividades
comment10.target=void\ setAtividades(java.util.Map)
comment11.params=nplanostreino
comment11.target=void\ setPlanosTreino(java.util.Map)
comment12.params=utilizador
comment12.target=void\ insereUtilizador(Utilizador)
comment13.params=atividade
comment13.target=void\ insereAtividade(Atividade)
comment14.params=plano_treino
comment14.target=void\ inserePlanoTreino(PlanoTreino)
comment15.params=nickUtilizador\ pt
comment15.target=void\ inserePlanoTreinoNoUtilizador(java.lang.String,\ PlanoTreino)
comment16.params=u\ a\ freq_atv\ d
comment16.target=void\ insereAtividadeNoHistoricoUtilizador(Utilizador,\ Atividade,\ int,\ java.time.LocalDate)
comment17.params=nomePlano\ a
comment17.target=void\ insereAtiviadeNoPlanoTreino(java.lang.String,\ Atividade)
comment18.params=
comment18.target=void\ viajarNoTempo()
comment19.params=
comment19.target=java.lang.String\ toString()
comment19.text=\r\n\ Ainda\ nao\ tem\ utilidade\ por\ enquanto\r\n\ \ \ \ public\ void\ removePlanoTreinoDoUtilizador(int\ idUtilizador,\ PlanoTreino\ pt)\r\n\ \ \ \ \ \ \ \ \ \ \ \ throws\ UtilizadorNaoExisteException,\ PlanoTreinoNaoExisteException\ {\r\n\ \ \ \ \ \ \ \ if\ (this.utilizadores.containsKey(idUtilizador))\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ this.utilizadores.get(idUtilizador).removePlanoTreino(pt);\r\n\r\n\ \ \ \ \ \ \ \ }\ else\r\n\ \ \ \ \ \ \ \ \ \ \ \ throw\ new\ UtilizadorNaoExisteException("Utilizador\ nao\ existe");//\ exemption\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ public\ void\ removeAtividadeDePlanoTreino(String\ nomePlano,\ Atividade\ a)\r\n\ \ \ \ \ \ \ \ \ \ \ \ throws\ AtividadeNaoExisteException,\ PlanoTreinoNaoExisteException\ {\r\n\ \ \ \ \ \ \ \ if\ (this.planos_treino.containsKey(nomePlano))\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ this.planos_treino.get(nomePlano).removeAtividade(a);\r\n\r\n\ \ \ \ \ \ \ \ }\ else\r\n\ \ \ \ \ \ \ \ \ \ \ \ throw\ new\ PlanoTreinoNaoExisteException("Plano\ de\ Treino\ nao\ existe");//\ exemption\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ public\ void\ removePlanoTreino(PlanoTreino\ plano_treino)\ throws\ PlanoTreinoNaoExisteException\ {\r\n\ \ \ \ \ \ \ \ if\ (this.planos_treino.containsKey(plano_treino.getNomePlano()))\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ this.planos_treino.remove(plano_treino.getNomePlano());\r\n\r\n\ \ \ \ \ \ \ \ }\ else\r\n\ \ \ \ \ \ \ \ \ \ \ \ throw\ new\ PlanoTreinoNaoExisteException("PlanoTreino\ nao\ existe");\ //\ exemption\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ public\ void\ removeUtilziador(Utilizador\ utilizador)\ throws\ UtilizadorNaoExisteException\ {\r\n\ \ \ \ \ \ \ \ if\ (this.utilizadores.containsKey(utilizador.getId()))\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ this.utilizadores.remove(utilizador.getId());\r\n\r\n\ \ \ \ \ \ \ \ }\ else\r\n\ \ \ \ \ \ \ \ \ \ \ \ throw\ new\ UtilizadorNaoExisteException("Utilizador\ nao\ existe");\ //\ exemption\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ public\ void\ removeAtividade(Atividade\ atividade)\ throws\ AtividadeNaoExisteException\ {\r\n\ \ \ \ \ \ \ \ if\ (this.atividades.containsKey(atividade.getCodigo()))\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ this.atividades.remove(atividade.getCodigo());\r\n\r\n\ \ \ \ \ \ \ \ }\ else\r\n\ \ \ \ \ \ \ \ \ \ \ \ throw\ new\ AtividadeNaoExisteException("Atividade\ nao\ existe");\ //\ exemption\r\n\ \ \ \ }\r\n
comment2.params=nutilizadores\ natividades\ nplanos_treino
comment2.target=FitnessApp(java.util.Map,\ java.util.Map,\ java.util.Map)
comment20.params=
comment20.target=java.lang.String\ toStringAtividades()
comment21.params=
comment21.target=java.lang.String\ toStringPlanosTreino()
comment22.params=
comment22.target=void\ save()
comment23.params=
comment23.target=void\ load()
comment3.params=ni\ pass
comment3.target=Utilizador\ getUtilizador(java.lang.String,\ java.lang.String)
comment4.params=codigo
comment4.target=Atividade\ getAtividade(int)
comment5.params=nome
comment5.target=PlanoTreino\ getPlanoTreino(java.lang.String)
comment6.params=
comment6.target=java.util.Map\ getUtilizadores()
comment7.params=
comment7.target=java.util.Map\ getAtividades()
comment8.params=
comment8.target=java.util.Map\ getPlanosTreino()
comment9.params=nutilizadores
comment9.target=void\ setUtilizadores(java.util.Map)
numComments=24
